---
interface Props {
  class?: string;
}

const { class: className } = Astro.props;

const languages = {
  items: [
    'TypeScript',
    'JavaScript (ES2022)',
    'Node.js',
    'Python',
    'HTML',
    'CSS',
  ],
  headingLevel: 3,
  headingText: 'Languages',
};
const frontEndFrameworks = {
  items: ['Vue', 'React', 'SolidJS', 'Svelte'],
  headingLevel: 3,
  headingText: 'Front-end Frameworks',
};
const backEndFrameworks = {
  items: ['FastAPI', 'Fastify', 'Express.js', 'Nuxt.js', 'SvelteKit'],
  headingLevel: 3,
  headingText: 'Back-end Frameworks',
};
const libraries = {
  items: ['D3.js', 'Highcharts.js', 'Tailwind', 'PostCSS'],
  headingLevel: 3,
  headingText: 'Libraries',
};
const testingFrameworks = {
  items: ['Jest', 'Playwright', 'Cypress', 'Vitest', 'Pytest'],
  headingLevel: 3,
  headingText: 'Testing Frameworks',
};
const databases = {
  items: ['PostgreSQL', 'MongoDB', 'Neo4j', 'Redis'],
  headingLevel: 3,
  headingText: 'Databases',
};
const buildTools = {
  items: ['Docker', 'npm', 'pnpm', 'Yarn', 'Vite', 'Webpack', 'Rollup'],
  headingLevel: 3,
  headingText: 'Build ',
};
const skillGroups = [
  languages,
  frontEndFrameworks,
  backEndFrameworks,
  libraries,
  testingFrameworks,
  databases,
  buildTools,
];
---

<article class={`${className} skills`}>
  <h2>Skills</h2>
  {
    skillGroups.map((skill) => (
      <section>
        <h3>{skill.headingText}</h3>
        <ul class="skill-list">
          {skill.items.map((item) => (
            <li>{item}</li>
          ))}
        </ul>
      </section>
    ))
  }
</article>

<style>
  .skill-list {
    display: flex;
    list-style: none;
  }
  .skills {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
  }
</style>
