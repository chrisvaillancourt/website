---
import {
	THEME_CHANGE_EVENT_TYPE,
	LIGHT_THEME_NAME,
	DARK_THEME_NAME,
} from '@/lib/theme';
---

<script
	define:vars={{
		THEME_CHANGE_EVENT_TYPE,
		LIGHT_THEME_NAME,

		DARK_THEME_NAME,
	}}
>
	// Inlined to avoid FOUC.
	const root = document.documentElement;

	/**
	 * The key used in local storage to save the user's theme.
	 */
	const THEME_STORAGE_KEY = 'theme';

	const storedTheme =
		typeof localStorage !== 'undefined' &&
		localStorage.getItem(THEME_STORAGE_KEY);

	const userTheme =
		storedTheme ||
		(window.matchMedia(`(prefers-color-scheme: ${LIGHT_THEME_NAME})`).matches
			? LIGHT_THEME_NAME
			: DARK_THEME_NAME);

	setTheme(userTheme);

	// theme-change is a custom event from ThemeProvider
	root.addEventListener(THEME_CHANGE_EVENT_TYPE, (e) => {
		setTheme(e.detail.theme);
	});

	function setTheme(theme) {
		root.dataset.theme = theme;
		if (!localStorage)
			return console.warn(
				'Theme preference will not persist. Local storage is unavailable',
			);
		localStorage.setItem(THEME_STORAGE_KEY, theme);
	}
</script>
