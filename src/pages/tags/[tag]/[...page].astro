---
import type { Page, GetStaticPaths } from 'astro';
import type { PostCollectionEntry } from '@/types';
import { getPostsCollection } from '@/lib/post';
import BaseLayout from '@/layouts/Base';
import PostPreview from '@/components/blog/PostPreview';
import Paginator from '@/components/Paginator';
import Link from '@/components/Link';
import { getUniqueTags, postsByDate } from '@/lib/post';

export const getStaticPaths = (async ({ paginate }) => {
	const allPosts = await getPostsCollection();
	const allPostsByDate = postsByDate(allPosts);
	const uniqueTags = getUniqueTags(allPostsByDate);

	return uniqueTags.map((tag) => {
		const filterPosts = allPostsByDate.filter((post) =>
			post.data.tags?.includes(tag),
		);
		return paginate(filterPosts, {
			params: { tag },
			pageSize: 10,
		});
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<PostCollectionEntry>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
	title: `Tag: ${tag}`,
	description: `View all posts with the tag - ${tag}`,
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: page.url.prev,
			text: `← Previous Tags`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: page.url.next,
			text: `Next Tags →`,
		},
	}),
};
---

<BaseLayout meta={meta}>
	<h1 class="mb-6 flex items-center">
		<Link hover-underline prefetch href="/tags/" class="text-accent">Tags</Link>
		<span class="me-3 ms-2">→</span>
		<span class="text-xl">#{tag}</span>
	</h1>
	<section aria-label="Blog post list">
		<ul class="space-y-8">
			{
				page.data.map((p) => (
					<li class="flex flex-col flex-wrap gap-2 sm:flex-row [&_q]:basis-full">
						<PostPreview post={p} as="h2" withDesc />
					</li>
				))
			}
		</ul>
		<Paginator {...paginationProps} />
	</section>
</BaseLayout>
